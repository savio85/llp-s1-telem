Responda as perguntas abaixo:
A **manipulação de bits** desempenha um papel crucial na programação moderna, oferecendo controle detalhado sobre os dados em nível binário. Vamos explorar por que a manipulação de bits é importante e como ela é aplicada:

1. O que é Manipulação de Bits?
 A manipulação de bits envolve a alteração de bits individuais em um número binário
2. Qual a Importância da Manipulação de Bits?
 Otimizar a eficiência e o desempenho do código
3. Quais são as Operações Básicas de Manipulação de Bits?
 AND bit a bit, OR bit a bit, XOR bit a bit e deslocamentos de bits para a esquerda e para a direita.
4. Exemplo em Linguagem C. Crie um programa  que exibe os bits de um número e realiza operações básicas:

#include <stdio.h>

// Função para exibir os bits de um número
void exibirBits(int num) {
    int i;
    for (i = 31; i >= 0; i--) {
        printf("%d", (num >> i) & 1);
    }
    printf("\n");
}

int main() {
    int num1, num2;

    // Entrada de dados
    printf("Digite o primeiro número: ");
    scanf("%d", &num1);
    printf("Digite o segundo número: ");
    scanf("%d", &num2);

    // Exibir os bits dos números
    printf("Bits do primeiro número: ");
    exibirBits(num1);
    printf("Bits do segundo número: ");
    exibirBits(num2);

    // Operações básicas
    int soma = num1 + num2;
    int subtracao = num1 - num2;
    int multiplicacao = num1 * num2;
    int divisao = num1 / num2;

    // Exibir resultados
    printf("Soma: %d\n", soma);
    printf("Subtração: %d\n", subtracao);
    printf("Multiplicação: %d\n", multiplicacao);
    printf("Divisão: %d\n", divisao);

    return 0;
}
